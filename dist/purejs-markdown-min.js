const MD_TYPE={REPLACE_ALL:"REPLACE_ALL",ADD_TAG:"ADD_TAG",WRAP_TAG:"WRAP_TAG",CUSTOM_EDIT:"CUSTOM_EDIT",IGNORE:"IGNORE"},STYLE_REG="(?<!\\S)\\D([^ S\n\r][^S\n\r]+[\n\r]?[^S\n\r]+[^ S\n\r])\\D(?!\\S)",MD_REGEX={wspace:{mode:MD_TYPE.REPLACE_ALL,html:"",regex:/^ +(?=[\n\r])/gm},h1:{mode:MD_TYPE.ADD_TAG,html:"h1",regex:/^ *#{1}( .+)/gm},h2:{mode:MD_TYPE.ADD_TAG,html:"h2",regex:/^ *#{2}( .+)/gm},h3:{mode:MD_TYPE.ADD_TAG,html:"h3",regex:/^ *#{3}( .+)/gm},h4:{mode:MD_TYPE.ADD_TAG,html:"h4",regex:/^ *#{4}( .+)/gm},h5:{mode:MD_TYPE.ADD_TAG,html:"h5",regex:/^ *#{5}( .+)/gm},h6:{mode:MD_TYPE.ADD_TAG,html:"h6",regex:/^ *#{6}( .+)/gm},h1_alt:{mode:MD_TYPE.ADD_TAG,html:"h1",regex:/(\S+.*)\n *\=+[ \n\r](?=[^\S])/gm},h2_alt:{mode:MD_TYPE.ADD_TAG,html:"h2",regex:/(\S+.*)\n *\-+[ \n\r](?=[^\S])/gm},hr1:{mode:MD_TYPE.REPLACE_ALL,html:"<hr>",regex:/^ *\*{3,} *[\n\r]+?/gm},hr2:{mode:MD_TYPE.REPLACE_ALL,html:"<hr>",regex:/^ *\_{3,} *[\n\r]+?/gm},hr3:{mode:MD_TYPE.REPLACE_ALL,html:"<hr>",regex:/^ *\-{3,} *[\n\r]+?/gm},cright1:{mode:MD_TYPE.REPLACE_ALL,html:"©",regex:/\(c\)/gm},cright2:{mode:MD_TYPE.REPLACE_ALL,html:"©",regex:/\(C\)/gm},rtmark1:{mode:MD_TYPE.REPLACE_ALL,html:"®",regex:/\(r\)/gm},rtmark2:{mode:MD_TYPE.REPLACE_ALL,html:"®",regex:/\(R\)/gm},tmark1:{mode:MD_TYPE.REPLACE_ALL,html:"™",regex:/\(tm\)/gm},tmark2:{mode:MD_TYPE.REPLACE_ALL,html:"™",regex:/\(TM\)/gm},paraph1:{mode:MD_TYPE.REPLACE_ALL,html:"§",regex:/\(p\)/gm},paraph1:{mode:MD_TYPE.REPLACE_ALL,html:"§",regex:/\(P\)/gm},plminus:{mode:MD_TYPE.REPLACE_ALL,html:"±",regex:/\+\-/gm},dots:{mode:MD_TYPE.REPLACE_ALL,html:"…",regex:/(?<=[a-zA-Z]{1})\.{2,}/gm},qdots:{mode:MD_TYPE.REPLACE_ALL,html:"?..",regex:/(?<=[a-zA-Z]{1}\?)\.{2,}/gm},edots:{mode:MD_TYPE.REPLACE_ALL,html:"!..",regex:/(?<=[a-zA-Z]{1}\!)\.{2,}/gm},trexclm:{mode:MD_TYPE.REPLACE_ALL,html:"!!!",regex:/\!{2,}/gm},trquest:{mode:MD_TYPE.REPLACE_ALL,html:"???",regex:/\?{2,}/gm},trquest:{mode:MD_TYPE.REPLACE_ALL,html:",",regex:/\,{2,}/gm},dbdash:{mode:MD_TYPE.REPLACE_ALL,html:"–",regex:/(?<= )\-{2}(?=[ \n\r])/gm},trdash:{mode:MD_TYPE.REPLACE_ALL,html:"—",regex:/(?<= )\-{3}(?=[ \n\r])/gm},i:{mode:MD_TYPE.ADD_TAG,html:"i",regex:new RegExp(STYLE_REG.replaceAll(/[SD]/g,"*"),"gm")},i_alt:{mode:MD_TYPE.ADD_TAG,html:"i",regex:new RegExp(STYLE_REG.replaceAll(/[SD]/g,"_"),"gm")},b:{mode:MD_TYPE.ADD_TAG,html:"b",regex:new RegExp(STYLE_REG.replaceAll("S","*").replaceAll("D","*\\*"),"gm")},b_alt:{mode:MD_TYPE.ADD_TAG,html:"b",regex:new RegExp(STYLE_REG.replaceAll("S","_").replaceAll("D","_\\_"),"gm")},s:{mode:MD_TYPE.ADD_TAG,html:"s",regex:new RegExp(STYLE_REG.replaceAll("S","~").replaceAll("D","~\\~"),"gm")},supsc:{mode:MD_TYPE.ADD_TAG,html:"sup",regex:new RegExp(STYLE_REG.replaceAll(/[SD]/g,"^"),"gm")},subsc:{mode:MD_TYPE.ADD_TAG,html:"sub",regex:new RegExp(STYLE_REG.replaceAll(/[SD]/g,"~"),"gm")},u:{mode:MD_TYPE.ADD_TAG,html:"u",regex:new RegExp(STYLE_REG.replaceAll("S","+").replaceAll("D","+\\+"),"gm")},mark:{mode:MD_TYPE.ADD_TAG,html:"mark",regex:new RegExp(STYLE_REG.replaceAll("S","=").replaceAll("D","=\\="),"gm")},ulist_wrap:{mode:MD_TYPE.WRAP_TAG,html:"ul",regex:/(^ *[-*+]+ ([\w\S]{1}.*) *?[\n\r][\n\r]*)+/gm},ul:{mode:MD_TYPE.CUSTOM_EDIT,html:"li",regex:/^ *[-*+]+ ([\w\S]{1}.*)/gm},olist_wrap:{mode:MD_TYPE.WRAP_TAG,html:"ol",regex:/(^ *[\w\d]+\. ([\w\S]{1}.*) *?[\n\r][\n\r]*)+/gm},ol:{mode:MD_TYPE.ADD_TAG,html:"li",regex:/^ *[\w\d]+\. ([\w\S]{1}.*)/gm},code_inl:{mode:MD_TYPE.ADD_TAG,html:"code",regex:/`([^`\n\r]+)`/gm},code_ind:{mode:MD_TYPE.CUSTOM_EDIT,html:"code",regex:/\`{3}((.*)[\S\s]+?(.*))\`{3}/gm},tb:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/((\|.+\|)\n? *\|([: ]?-{3,}[: ]?\|)+\n? *((\|.+\|)\n? *)*)/gm},a:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/(?<=[^!])\[(.*?)\]\((.*?)( "(.*)")?\)/gm},img:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/!\[(.*?)\]\((.*?)( "(.*)")?\)/gm},img_foot_def:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/^ *\[([^\^\]]+)\]: +(\S*) +(?<q>[\"\'])(.*)(\k<q>)/gm},img_foot:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/!\[(.*?)\]\[(.*?)\]/gm},text_foot:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/\[\^([^\]]+)\](?=[^:])/gm},foot_def:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/^ *\[\^([^\]]+)\]:(.*(?=[\n\r]))/gm},bquote_all:{mode:MD_TYPE.ADD_TAG,html:"blockquote",regex:/(^ *( ?>)+ .+[\n\r]?[\n\r]?)+/gm},bquote:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/^ *( ?>)+ .+/gm},abbr:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/^ *\*\[([^\^\]]+)\]: +(.*)[\n\r]/gm},a_auto:{mode:MD_TYPE.CUSTOM_EDIT,html:"",regex:/(?<= )https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)(?= )/gm},lbreakslash:{mode:MD_TYPE.REPLACE_ALL,html:"<br>",regex:/\\(?=[\r\n])/gm},auto_bline:{mode:MD_TYPE.REPLACE_ALL,html:"</p><p>",regex:/^(\s*[\r\n])+/gm},auto_return:{mode:MD_TYPE.REPLACE_ALL,html:"<br>\n",regex:/[\n\r]/gm},auto_returnfix:{mode:MD_TYPE.REPLACE_ALL,html:" ",regex:/<br>[\n\r\s]*?<br>/gm}},INSPECT_AFTER=[MD_REGEX.ulist_wrap,MD_REGEX.olist_wrap,MD_REGEX.bquote_all,MD_REGEX.auto_bline],PARAGRAP_AFTER=["div","hr","br","h1","h2","h3","h4","h5","h6","blockquote","ul","ol","pre","code","table","dl","section"];function jConvertMarkdown(e=!0){let m=document.getElementsByClassName("pjs-markdown");for(let e=0;e<m.length;e++){let r=m[e],_=jMarkdownToHtml(r.innerHTML);r.innerHTML=_,r.innerHTML=r.innerHTML.replaceAll(/<p>\s*<\/p>/gm," "),r.innerHTML=r.innerHTML.replaceAll(/<p>\s*<br>\s*<\/p>/gm,"<br>")}}function jMarkdownToHtml(e,m=!0){let r=e,_={},l={};r=`<p>\n\n${r}\n\n</p>`;let E=Object.keys(MD_REGEX).length;for(let e=0;e<E;e++){let m=Object.keys(MD_REGEX)[e],E=MD_REGEX[m],t=[...r.matchAll(E.regex)],g=E.html;for(let e=0;e<t.length;e++)switch(E.mode){case MD_TYPE.REPLACE_ALL:r=r.replace(E.regex,`${g}`);break;case MD_TYPE.ADD_TAG:let T=m.match(/h[1-2]_alt/gm),A=PARAGRAP_AFTER.includes(g);r=r.replace(t[e][0],`${A?"</p>":""}<${g} ${T?'style="text-align: center;"':""}>${t[e][1]}</${g}>${A?"<p>":""}`);break;case MD_TYPE.WRAP_TAG:r=r.replace(t[e][0],`<${g}>\n${t[e][0]}\n</${g}>`);break;case MD_TYPE.CUSTOM_EDIT:r=jMarkdownCustomEdit(E,m,t[e],r,_,l)}}return r}function jMarkdownCustomEdit(e,m,r,_,l,E){if(m.match(/ul[1-3]/gm),m.match(/ol[1-2]/gm),"code_ind"==m)return _.replace(r[0],`<pre><code>${r[1]}</code></pre>`);if("a"==m)return void 0!==r[4]?_.replace(r[0],`<a href="${r[2]}" title="${r[4]}"}>${r[1]}</a>`):_.replace(r[0],`<a href="${r[2]}">${r[1]}</a>`);if("a_auto"==m)return _.replace(r[0],`<a href="${r[0]}">${r[0]}</a>`);if("img"==m)return void 0!==r[4]?_.replace(r[0],`<img src="${r[2]}" alt="${r[1]}" title="${r[4]}"}></img>`):_.replace(r[0],`<img src="${r[2]}" alt="${r[1]}"}></img>`);if("img_foot_def"==m)return E[r[1]]={link:r[2],title:r[4]},_.replace(r[0],"");if("img_foot"==m){if(!(r[2]in E))return _;let e=E[r[2]];return _.replace(r[0],`<img src="${e.link}" alt="${e.title}" title="${e.title}"}></img>`)}if("text_foot"==m){let e=0;return r[1]in l||(l[r[1]]=Object.keys(l).length+1),e=l[r[1]],_.replace(r[0],`<sup><a href=#${r[1]}>[${e}]</a></sup>`)}if("foot_def"==m){let e=0;return r[1]in l||(l[r[1]]=Object.keys(l).length+1),e=l[r[1]],_.replace(r[0],`<p id=${r[1]}>${e}. ${r[2]}</p>`)}return _}